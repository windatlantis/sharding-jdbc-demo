# https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/configuration/config-spring-boot/
# https://shardingsphere.apache.org/document/legacy/4.x/document/en/manual/sharding-jdbc/

# 配置真实数据源
spring.shardingsphere.datasource.names=ds0,ds1,readds0,readds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0?serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1?serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

# 配置第 1 个数据源
spring.shardingsphere.datasource.readds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.readds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.readds0.url=jdbc:mysql://localhost:3307/ds0?serverTimezone=UTC
spring.shardingsphere.datasource.readds0.username=root
spring.shardingsphere.datasource.readds0.password=123456

# 配置第 2 个数据源
spring.shardingsphere.datasource.readds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.readds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.readds1.url=jdbc:mysql://localhost:3307/ds1?serverTimezone=UTC
spring.shardingsphere.datasource.readds1.username=root
spring.shardingsphere.datasource.readds1.password=123456


# 配置 t_order 表规则
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

# 读写分离
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds0.static-strategy.write-data-source-name=ds0
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds0.static-strategy.read-data-source-names=readds0
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds0.load-balancer-name=round_robin
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds1.static-strategy.write-data-source-name=ds1
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds1.static-strategy.read-data-source-names=readds1
spring.shardingsphere.rules.readwrite-splitting.data-sources.rwds1.load-balancer-name=round_robin
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type=ROUND_ROBIN

# 打开shardingsphere的sql日志输出。
spring.shardingsphere.props.sql.show=true

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true